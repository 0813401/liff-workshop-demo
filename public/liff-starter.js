 // DO NOT CHANGE THIS
let REDIRECT_URI = "";
let PROFILE = null;

window.onload = function() {
    const useNodeJS = true;   // if you are not using a node server, set this value to false
    const defaultLiffId = "";   // change the default LIFF value if you are not using a node server

    // DO NOT CHANGE THIS
    let myLiffId = "";

    // if node is used, fetch the environment variable and pass it to the LIFF method
    // otherwise, pass defaultLiffId
    if (useNodeJS) {
        fetch('/send-id')
            .then(function(reqResponse) {
                return reqResponse.json();
            })
            .then(function(jsonResponse) {
                myLiffId = jsonResponse.id;
                REDIRECT_URI = jsonResponse.redirectUri;
                initializeLiffOrDie(myLiffId);
            })
            .catch(function(error) {
                console.error(error)
            });
    } else {
        myLiffId = defaultLiffId;
        initializeLiffOrDie(myLiffId);
    }
};

/**
* Check if myLiffId is null. If null do not initiate liff.
* @param {string} myLiffId The LIFF ID of the selected element
*/
function initializeLiffOrDie(myLiffId) {
    if (myLiffId) {
        initializeLiff(myLiffId);
    } else {
        console.error('please set your liff Id in application!')
    }
}

/**
* Initialize LIFF
* @param {string} myLiffId The LIFF ID of the selected element
*/
function initializeLiff(myLiffId) {
    liff
        .init({
            liffId: myLiffId
        })
        .then(() => {
            // start to use LIFF's api
            initializeApp();
        })
        .catch((err) => {
            console.log(err)
        });
}

/**
 * Initialize the app by calling functions handling individual app components
 */
function initializeApp() {
    displayLiffData();
    displayIsInClientInfo();
    registerButtonHandlers();
    // check if the user is logged in/out, and disable inappropriate button
    if (liff.isLoggedIn()) {
        document.getElementById('liffLoginButton').disabled = true;
    } else {
        document.getElementById('liffLogoutButton').disabled = true;
        document.getElementById('shareMeTargetPicker').disabled = true;
    }
}

/**
* Display data generated by invoking LIFF methods
*/
function displayLiffData() {
    liff.getProfile()
    .then((result) => {
        PROFILE = result;
        document.getElementById('profileName').textContent = 'Hi, ' + result.displayName;
    })
    document.getElementById('isInClient').textContent = liff.isInClient();
    document.getElementById('isLoggedIn').textContent = liff.isLoggedIn();
}

/**
* Toggle the login/logout buttons based on the isInClient status, and display a message accordingly
*/
function displayIsInClientInfo() {
    if (liff.isInClient()) {
        document.getElementById('liffLoginButton').classList.toggle('hidden');
        document.getElementById('liffLogoutButton').classList.toggle('hidden');
        document.getElementById('isInClientMessage').textContent = 'You are opening the app in the in-app browser of LINE.';
    } else {
        document.getElementById('shareMeTargetPicker').classList.toggle('hidden');
    }
}

/**
* Register event handlers for the buttons displayed in the app
*/
function registerButtonHandlers() {
    document.getElementById('shareMeTargetPicker').addEventListener('click', function () {
        if (liff.isApiAvailable('shareTargetPicker')) {
            liff.shareTargetPicker([{
                'type': 'text',
                'text': 'Hello, I am ' + PROFILE.displayName
            }, {
                'type': 'image',
                'originalContentUrl': PROFILE.pictureUrl,
                'previewImageUrl': PROFILE.pictureUrl
            }]).then(function (res) {
                alert(`[${res.status}] Message sent!`);
            }).catch(function (res) {
                console.error(res);
            });
        }
    });

    // login call, only when external browser is used
    document.getElementById('liffLoginButton').addEventListener('click', function() {
        if (!liff.isLoggedIn()) {
            if (!REDIRECT_URI) {
                liff.login();
            } else {
                liff.login({ redirectUri: REDIRECT_URI });
            }            
        }
    });

    // logout call only when external browse
    document.getElementById('liffLogoutButton').addEventListener('click', function() {
        if (liff.isLoggedIn()) {
            liff.logout();
            window.location.reload();
        }
    });

    document.getElementById('previewImage').addEventListener('click', function () {
        document.getElementById('memeImage').src = document.getElementById('inputImageUrl').value;
    });

    document.getElementById('topText').addEventListener('keyup', function (event) {
        document.getElementById('memeTopCaption').textContent = event.target.value;
    });

    document.getElementById('bottomText').addEventListener('keyup', function (event) {
        document.getElementById('memeBottomCaption').textContent = event.target.value;
    });

     document.getElementById('shareMeme').addEventListener('click', function (event) {
        if (!liff.isLoggedIn()) alert('please login in LINE');

        const imageUrl = document.getElementById('memeImage').src;
        const topText = document.getElementById('memeTopCaption').textContent;
        const bottomText = document.getElementById('memeBottomCaption').textContent;
        liff.shareTargetPicker([{
            'type': 'flex',
            'altText': topText + ' ' + bottomText,
            'contents': {
                "type": "bubble",
                "body": {
                    "type": "box",
                    "layout": "vertical",
                    "contents": [
                    {
                        "type": "image",
                        "url": "https://raw.githubusercontent.com/cichien/liff-workshop-demo/master/public/images/meme/shutup.png",
                        "aspectMode": "cover",
                        "aspectRatio": "1:1",
                        "gravity": "center",
                        "size": "300px"
                    },
                    {
                        "type": "box",
                        "layout": "horizontal",
                        "contents": [
                        {
                            "type": "box",
                            "layout": "vertical",
                            "contents": [
                            {
                                "type": "box",
                                "layout": "horizontal",
                                "contents": [
                                {
                                    "type": "text",
                                    "text": "SHUT UP AND",
                                    "size": "40px",
                                    "color": "#ffffff",
                                    "weight": "bold",
                                    "align": "center",
                                    "wrap": true
                                }
                                ]
                            }
                            ],
                            "spacing": "xs"
                        }
                        ],
                        "position": "absolute",
                        "offsetTop": "0px",
                        "alignItems": "center",
                        "offsetEnd": "0px",
                        "offsetStart": "0px",
                        "paddingTop": "5px"
                    },
                    {
                        "type": "box",
                        "layout": "horizontal",
                        "contents": [
                        {
                            "type": "box",
                            "layout": "vertical",
                            "contents": [
                            {
                                "type": "box",
                                "layout": "horizontal",
                                "contents": [
                                {
                                    "type": "text",
                                    "text": "TAKE MY MONEY",
                                    "size": "40px",
                                    "color": "#ffffff",
                                    "style": "normal",
                                    "decoration": "none",
                                    "gravity": "bottom",
                                    "weight": "bold",
                                    "wrap": true,
                                    "align": "center"
                                }
                                ]
                            }
                            ],
                            "spacing": "xs",
                            "alignItems": "center"
                        }
                        ],
                        "position": "absolute",
                        "offsetBottom": "0px",
                        "offsetStart": "0px",
                        "offsetEnd": "0px",
                        "paddingBottom": "5px"
                    }
                    ],
                    "paddingAll": "0px"
                }
            }
        }]).then(function (res) {
            alert(`[${res.status}] Message sent!`);
        }).catch(function (res) {
            console.error(res);
        });
    });
}

/**
* Toggle specified element
* @param {string} elementId The ID of the selected element
*/
function toggleElement(elementId) {
    const elem = document.getElementById(elementId);
    if (elem.offsetWidth > 0 && elem.offsetHeight > 0) {
        elem.style.display = 'none';
    } else {
        elem.style.display = 'block';
    }
}
